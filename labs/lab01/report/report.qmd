---
# Preamble

## Author
author:
  name: Бызова Мария Олеговна, НПИбд-01-23
## Title
title: "Отчет по лабораторной работе № 1"
subtitle: "Подготовка лабораторного стенда."
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Целью данной работы является приобретение практических навыков установки Rocky Linux на виртуальную машину с помощью инструмента Vagrant.

# Теоретическое введение

Vagrant — представляет собой инструмент для создания и управления средами виртуальных машин в одном рабочем процессе.
Этот инструмент, по сути, позволяет автоматизировать процесс установки на виртуальную машину как основного дистрибутива операционной системы, так и настройки необходимого в дальнейшем программного обеспечения.

С проектом Vagrant и документацией по этому инструментальному средству можно ознакомиться на сайте https://www.vagrantup.com.

Основные понятия Vagrant:
– провайдер (provider) — система виртуализации, с которой работает Vagrant (например, VirtualBox, VMWare и т.п.);
– box-файл (или Vagrant Box) — сохранённый образ виртуальной машины с развёрнутой в ней операционной системой; по сути, box-файл используется как основа для клонирования виртуальных машин с теми или иными настройками;
– Vagrantfile — конфигурационный файл, написанный на языке Ruby, в котором указаны настройки запуска виртуальной машины.

# Выполнение лабораторной работы

## Подготовка рабочего каталога

Перед началом работы с Vagrant я создала каталог для проекта([рис. @fig-001]).

![Созданный каталог проекта](image/18.PNG){#fig-001 width=70%}

В созданном рабочем каталоге в подкаталоге packer разместила образ варианта операционной системы Rocky Linux ([рис. @fig-002]).

![Каталог packer](image/19.PNG){#fig-002 width=70%}

В этом же рабочем каталоге разместила подготовленные заранее для работы с Vagrant файлы: в подкаталоге packer файл vagrant-rocky.pkr.hcl, в подкаталоге packer подкаталог http с файлом ks.cfg, в подкаталоге vagrant файл Vagrantfile. ([рис. @fig-003]).

![Каталог vagrant](image/20.PNG){#fig-003 width=70%}

В этом же рабочем каталоге в подкаталоге vagrant создала каталог provision с подкаталогами default, server и client, в которых будут размещаться скрипты, изменяющие настройки внутреннего окружения базового (общего) образа виртуальной машины, сервера или клиента соответственно. ([рис. @fig-004]).

![Каталог provision](image/21.PNG){#fig-004 width=70%}

В каталогах default, server и client разместила заранее подготовленный скрипт-заглушку 01-dummy.sh 

В каталоге default разместила заранее подготовленный скрипт 01-user.sh 

В каталоге default разместила заранее подготовленный скрипт 01-hostname.sh ([рис. @fig-005]).

![Каталог default](image/22.PNG){#fig-005 width=70%}

В каталоге server разместила заранее подготовленный скрипт 02-forward.sh ([рис. @fig-006]).

![Каталог server](image/23.PNG){#fig-006 width=70%}

В каталоге client разместила заранее подготовленный скрипт 01-routing.sh ([рис. @fig-007]).

![Каталог client](image/24.PNG){#fig-007 width=70%}

## Развёртывание лабораторного стенда на ОС Windows

Используя FAR, перешла в созданный рабочий каталог с проектом. В этом же каталоге должен быть размещён файл packer.exe. В командной строке ввела

packer.exe init vagrant-rocky.pkr.hcl ([рис. @fig-008]).

![packer.exe init vagrant-rocky.pkr.hcl](image/2.PNG){#fig-008 width=70%}

packer.exe build vagrant-rocky.pkr.hcl ([рис. @fig-009]).

![packer.exe build vagrant-rocky.pkr.hcl](image/25.PNG){#fig-009 width=70%}

Для регистрации образа виртуальной машины в vagrant в командной строке ввела ([рис. @fig-010]).

vagrant box add rocky9 vagrant-virtualbox-rocky-9-x86_64.box

![Регистрация образа виртуальной машины](image/4.PNG){#fig-010 width=70%}

Для запуска виртуальной машины Server ввела в консоли vagrant up server ([рис. @fig-011]).

![Запуск виртуальной машины Server](image/5.PNG){#fig-011 width=70%}

Для запуска виртуальной машины Client ввела в консоли vagrant up client ([рис. @fig-012]).

![Запуск виртуальной машины Client](image/7.PNG){#fig-012 width=70%}

Убедилась, что запуск обеих виртуальных машин прошёл успешно, залогинилась под пользователем vagrant с паролем vagrant в графическом окружении.

Подключилась к серверу из консоли: vagrant ssh server. Ввела пароль vagrant ([рис. @fig-013]).

![Подключение к серверу из консоли](image/9.PNG){#fig-013 width=70%}

Перешла к пользователю mobihzova. Отлогинилась. Проделала то же самое для клиента. 

Выключила обе виртуальные машины 

vagrant halt server ([рис. @fig-014]).

![Отключение виртуальной машины сервер](image/10.PNG){#fig-014 width=70%}

vagrant halt client ([рис. @fig-015]).

![Отключение виртуальной машины клиент](image/11.PNG){#fig-015 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Зафиксировала внесённые изменения для внутренних настроек виртуальных машин, введя в терминале:

vagrant up server --provision ([рис. @fig-016]).

![Фиксирование внесённых изменений](image/12.PNG){#fig-016 width=70%}

vagrant up client --provision ([рис. @fig-017]).

![Фиксирование внесённых изменений](image/13.PNG){#fig-017 width=70%}

Залогинилась на сервере и клиенте под созданным пользователем.

Выключила виртуальные машины.

vagrant halt server ([рис. @fig-018]).

![Отключение виртуальной машины сервер](image/10.PNG){#fig-018 width=70%}

vagrant halt client ([рис. @fig-019]).

![Отключение виртуальной машины клиент](image/11.PNG){#fig-019 width=70%}

После выключения виртуальных машин скопировала необходимые для работы с Vagrant файлы и box-файлы виртуальных машин на внешний носитель.

# Ответы на контрольные вопросы. 

1. Для чего предназначен Vagrant? Vagrant используется для создания и конфигурирования виртуальной среды разработки, при чем создаваемое окружение можно легко повторять и переносить.

2. Что такое box-файл? В чём назначение Vagrantfile? Boxфайл содержит образ виртуальной машины, Vagrantfile, в котором дается описание машины и информация, как настроить и подготовить ее к работе.

3. Приведите описание и примеры вызова основных команд Vagrant.

* Создание и запуск виртуальной машины: vargrant up
* Вход: vagrant ssh
* Остановка маишны: vagrant halt
* Удаление собранной машины: vagrant destroy

4. Дайте построчные пояснения содержания файлов vagrant-rocky.pkr.hcl, ks.cfg, Vagrantfile, Makefile

• Файл vagrant-rocky.pkr.hcl

Блок packer устанавливает, что для работы необходимы версии vagrant и VirtualBox не ниже 1 (version = "∼> 1").
Затем идут блоки variable, где задаются переменные, которые будут использоваться в работе скрипта, например имя ВМ, версия, размер дискового пространства, архитектура процессора и т. д. Блок source задает конфигурацию сборщики с возможностью переиспользования. В нашем случае задаются параметры сборки виртуальной машины в VirtualBox, какой образ использовать, сколько выделить оперативной памяти, ядер процессора. Последний блок build описывает сам процесс сборки. Здесь указаны скрипты, которые будут запущены: настройка каталогов, установка необходимых для работы утилит.

• ks.cfg

В этом файле мы задаем настройки для установки дистрибутива, которые обычно выбираются пользователем вручную при установки дистрибутива. Определяем системный язык, необходимые раскладки клавиатуры (русская и английская), логин и пароль root-пользователя, настраиваем swap.

• Vagrantfile

Описываем конфигурацию запуска виртуальных машин сервера и клиента: количество оперативной памяти, видеопамяти, имя хоста, настройки VBoxAddtions.

• Makefile

Содержат скрипты для программы make, упрощающие работу с vagrant. Содержит следющие цели: addbox, client-destroy,client-halt, client-provision, client-up, plugins, server-destroy, server-halt, server-provision, server-up, каждая из которых вызавает утилиту vagrant с соответствующими параметрами.

# Выводы

В рамках лабораторной работы познакомились с интструментом Vagrant и подготовили лабораторный стенд.
