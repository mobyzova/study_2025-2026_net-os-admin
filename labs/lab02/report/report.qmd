---
# Preamble

## Author
author:
  name: Бызова Мария Олеговна
## Title
title: "Отчёт по лабораторной работе №2"
subtitle: "Настройка DNS-сервера"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Целью данной работы является приобретение практических навыков по установке и конфигурированию DNS-сервера, усвоение принципов работы системы доменных имён.

# Выполнение лабораторной работы

## Установка DNS-сервера

Загрузим нашу операционную систему и перейдем в рабочий каталог с проектом. Далее запустим виртуальную машину server ([рис. @fig-001]).

![Открытие рабочего каталога с проектом и запуск виртуальной машины server.](image/1.PNG){#fig-001 width=70%}

На виртуальной машине server войдём под созданным нами в предыдущей работе пользователем и откроем терминал. Перейдём в режим суперпользователя и установим bind и bind-utils ([рис. @fig-002]).

![Переход в режим суперпользователя и установка bind,bind-utils.](image/2.PNG){#fig-002 width=70%}

С помощью утилиты dig сделаем запрос к DNSадресу www.yandex.ru ([рис. @fig-003]).

![Запрос с помощью утилиты dig.](image/3.PNG){#fig-003 width=70%}

При выполнении команды dig www.yandex.ru наблюдается начальная ошибка таймаута соединения с DNS-сервером 192.168.80.63#53, однако запрос в конечном итоге был успешно обработан. Ответ содержит информацию о DNS-запросе типа A для доменного имени www.yandex.ru. В секции ANSWER представлены три A-записи, соответствующие IP-адресам серверов Яндекса: 77.88.44.55, 5.255.255.77 и 77.88.55.88, с TTL (время жизни) 268 секунд. Статус NOERROR указывает на успешное разрешение доменного имени. Время выполнения запроса составило 3 мсек, что свидетельствует об эффективной работе DNS-резолвинга после первоначальной задержки. Использованный DNS-сервер (192.168.80.63) обработал запрос по UDP на порту 53.

## Конфигурирование кэширующего DNS-сервера

Просмотрим содержание файлов /etc/resolv.conf, /etc/named.conf, /var/named/named.ca, /var/named/named.localhost, /var/named/named.loopback ([рис. @fig-004] - [рис. @fig-008]).

![Просмотр содержания файла /etc/resolv.conf.](image/4.PNG){#fig-004 width=70%}

![Просмотр содержания файла /etc/named.conf.](image/5.PNG){#fig-005 width=70%}

![Просмотр содержания файла /var/named/named.ca.](image/6.PNG){#fig-006 width=70%}

![Просмотр содержания файла /var/named/named.localhost.](image/7.PNG){#fig-007 width=70%}

![Просмотр содержания файла /var/named/named.loopback.](image/8.PNG){#fig-008 width=70%}

Анализ файла /var/named/named.loopback:  
Данный файл представляет собой конфигурацию обратной зоны для loopback-адреса (127.0.0.1). Он содержит SOA-запись с серийным номером 0, параметрами обновления (refresh 1 день, retry 1 час, expire 1 неделя, minimum 3 часа), NS-запись, указывающую на текущий сервер, A-запись для IPv4 (127.0.0.1), AAAA-запись для IPv6 (::1) и PTR-запись, сопоставляющую адрес с именем localhost. Это стандартная конфигурация для разрешения обратных запросов на локальный интерфейс.

Анализ файла /etc/resolv.conf:  
Файл содержит конфигурацию DNS-резолвера, сгенерированную NetworkManager. Опция search определяет домены для автоматического дополнения имён: rudn.ru и mobihzova.net. В секции nameserver указаны два DNS-сервера: первичный 192.168.80.63 и вторичный 37.18.92.6. Это указывает на то, что система использует внешние DNS-серверы для разрешения имён, а не локальный named.

Анализ файла /etc/named.conf (частичный):  
Приведённый фрагмент показывает секцию options конфигурации BIND. Директива listen-on port 53 { 127.0.0.1; } означает, что DNS-сервер прослушивает только локальный интерфейс (127.0.0.1), что типично для кэширующего резолвера. Это ограничивает доступ к серверу только с локальной машины, обеспечивая базовую безопасность.

Анализ файла /var/named/named.ca:  
Это корневая hints-зона, содержащая информацию о корневых DNS-серверах Интернета. Файл используется для инициализации кэша DNS-сервера и содержит список корневых серверов, их IP-адреса и актуальную дату обновления (20 декабря 2023). Он критически важен для правильного разрешения внешних доменных имён.

Анализ файла /var/named/named.localhost:  
Файл определяет прямую зону для localhost. Содержит SOA-запись с серийным номером 0 и стандартными параметрами обновления, NS-запись и A-запись для 127.0.0.1 (IPv4) и ::1 (IPv6). Отсутствие PTR-записи отличает его от named.loopback, что характерно для прямой зоны локального хоста.

Запустим DNS-сервер. Включим запуск DNS-сервера в автозапуск при загрузке системы. Проанализируем отличие в выведенной на экран информации при выполнении команд: dig www.yandex.ru ([рис. @fig-009]). и dig @127.0.0.1 www.yandex.ru ([рис. @fig-010]).

![Запуск DNS-сервера, включение запуска DNS-сервера в автозапуск при загрузке системы, анализ выведенной на экран информации при выполнении команды dig www.yandex.ru.](image/9.PNG){#fig-009 width=70%}

![Анализ выведенной на экран информации при выполнении команды dig @127.0.0.1 www.yandex.ru.](image/10.PNG){#fig-010 width=70%}

При выполнении команды dig www.yandex.ru без указания сервера запрос автоматически направляется к DNS-серверу 192.168.80.63, что приводит к первоначальному таймауту, но успешному разрешению с временем отклика 3 мсек. TTL записей составляет 268 секунд. В отличие от этого, явное указание локального DNS-сервера командой dig @127.0.0.1 www.yandex.ru также показывает таймаут, но с более длительным временем отклика 3243 мсек, что свидетельствует о задержках в работе локального сервера. TTL записей в этом случае увеличен до 600 секунд. Оба запроса возвращают идентичные IP-адреса Яндекса (77.88.55.88, 77.88.44.55, 5.255.255.77), но второй запрос содержит дополнительную опцию EDNS с COOKIE, что указывает на использование расширенных возможностей DNS. Ключевое отличие: первый запрос использует внешний DNS-сервер 192.168.80.63, второй - локальный сервер 127.0.0.1, что демонстрирует разницу в производительности и конфигурации резолвинга.

Сделаем DNS-сервер сервером по умолчанию для хоста server и внутренней виртуальной сети. Для этого изменим настройки сетевого соединения eth0 в NetworkManager, переключив его на работу с внутренней сетью и указав для него в качестве DNS-сервера по умолчанию адрес 127.0.0.1 ([рис. @fig-011]).

![Настройка DNS-сервера сервером по умолчанию для хоста server и внутренней виртуальной сети.](image/11.PNG){#fig-011 width=70%}

Перезапустим NetworkManager. Проверим наличие изменений в файле /etc/resolv.conf ([рис. @fig-012]).

![Перезапуск NetworkManager и проверка наличия изменений в файле /etc/resolv.conf.](image/12.PNG){#fig-012 width=70%}

Теперь нам требуется настроить направление DNS-запросов от всех узлов внутренней сети, включая запросы от узла server, через узел server. Для этого внесём изменения в файл /etc/named.conf, заменив строку

listen-on port 53 { 127.0.0.1; }; на listen-on port 53 { 127.0.0.1; any; };

и строку

allow-query { localhost; }; на allow-query { localhost; 192.168.0.0/16; }; ([рис. @fig-013]).

![Настройка направление DNS-запросов от всех узлов внутренней сети, включая запросы от узла server, через узел server.](image/13.PNG){#fig-013 width=70%}

Внесём изменения в настройки межсетевого экрана узла server, разрешив работу с DNS: firewall-cmd --add-service=dns firewall-cmd --add-service=dns --permanent. Убедимся, что DNS-запросы идут через узел server, который прослушивает порт 53. Для этого на данном этапе используем команду lsof | grep UDP ([рис. @fig-014]).

![Внос изменений в настройки межсетевого экрана узла server, разрешив работу с DNS. Проверка, что DNS-запросы идут через узел server, который прослушивает порт 53.](image/14.PNG){#fig-014 width=70%}

В случае возникновения в сети ситуации, когда DNS-запросы от сервера фильтруются сетевым оборудованием, следует добавить перенаправление DNS-запросов на конкретный вышестоящий DNS-сервер. Для этого в конфигурационный файл named.conf в секцию options добавим: forwarders { список DNS-серверов }; forward first; Кроме того, возможно вышестоящий DNS-сервер может не поддерживать технологию DNSSEC, тогда в конфигурационном файле named.conf укажем следующие настройки ([рис. @fig-015]).

![Добавление перенаправлений DNS-запросов на конкретный вышестоящий DNS-сервер и дополнительных настроек](image/15.PNG){#fig-015 width=70%}

## Конфигурирование первичного DNS-сервера

Скопируем шаблон описания DNS-зон named.rfc1912.zones из каталога /etc в каталог /etc/named и переименуем его в mobihzova.net ([рис. @fig-016]).

![Копирование шаблона описания DNS-зон из каталога /etc в каталог /etc/named и изменение его названия.](image/16.PNG){#fig-016 width=70%}

Включим файл описания зоны /etc/named/mobihzova.net в конфигурационном файле DNS /etc/named.conf, добавив в нём в конце строку include "/etc/named/mobihzova.net" ([рис. @fig-017]).

![Включение файла описания зоны /etc/named/mobihzova.net в конфигурационном файле DNS /etc/named.conf.](image/17.PNG){#fig-017 width=70%}

Откроем файл /etc/named/mobihzova.net на редактирование и вместо зоны пропишем свою прямую зону. Далее, вместо зоны пропишем свою обратную зону. Остальные записи в файле /etc/named/mobihzova.net удалим ([рис. @fig-018]).

![Открытие файла /etc/named/mobihzova.net на редактирование. Прописывание своей прямой зоны, обратной зоны и удаление остальных записей в файле.](image/18.PNG){#fig-018 width=70%}

В каталоге /var/named создадим подкаталоги master/fz и master/rz, в которых будут располагаться файлы прямой и обратной зоны соответственно ([рис. @fig-019]).

![В каталоге /var/named создание подкаталогов master/fz и master/rz.](image/19.PNG){#fig-019 width=70%}

Скопируем шаблон прямой DNS-зоны named.localhost из каталога /var/named в каталог /var/named/master/fz и переименуем его в mobihzova.net ([рис. @fig-020]).

![Копирование шаблона прямой DNS-зоны named.localhost из каталога /var/named в каталог /var/named/master/fz и изменение его названия.](image/20.PNG){#fig-020 width=70%}

Изменим файл /var/named/master/fz/mobihzova.net, указав необходимые DNS записи для прямой зоны. В этом файле DNS-имя сервера @ rname.invalid. заменим на @ server.mobihzova.net. Формат серийного номера ГГГГММДДВВ (ГГГГ — год, ММ — месяц, ДД — день, ВВ — номер ревизии) [1]; адрес в A- заменим с 127.0.0.1 на 192.168.1.1; в директиве $ORIGIN зададим текущее имя домена mobihzova.net, а затем укажем имена и адреса серверов в этом домене в виде A-записей DNS (на данном этапе пропишем сервер с именем ns и адресом 192.168.1.1) ([рис. @fig-021]).

![Изменение файла /var/named/master/fz/mobihzova.net, указав необходимые DNS записи для прямой зоны.](image/21.PNG){#fig-021 width=70%}

Скопируем шаблон обратной DNS-зоны named.loopback из каталога /var/named в каталог /var/named/master/rz и переименуем его в 192.168.1 ([рис. @fig-022]).

![Копирование шаблона обратной DNS-зоны named.loopback из каталога /var/named в каталог /var/named/master/rz и изменение его названия.](image/22.PNG){#fig-022 width=70%}

Изменим файл /var/named/master/rz/192.168.1, указав необходимые DNS записи для обратной зоны. В этом файле DNS-имя сервера @ rname.invalid заменим на @ server.mobihzova.net. формат серийного номера ГГГГММДДВВ (ГГГГ — год, ММ — месяц, ДД — день, ВВ — номер ревизии); адрес в A-записи заменим с 127.0.0.1 на 192.168.1.1; в директиве $ORIGIN зададим название обратной зоны в виде 1.168.192.in-addr.arpa., затем зададим PTR-записи (на данном этапе зададим PTR запись, ставящая в соответствие адресу 192.168.1.1 DNS-адрес ns.mobihzova.net) ([рис. @fig-023]).

![Изменение файла /var/named/master/rz/192.168.1, указав необходимые DNS записи для обратной зоны.](image/23.PNG){#fig-023 width=70%}

Далее исправим права доступа к файлам в каталогах /etc/named и /var/named, чтобы демон named мог с ними работать. В системах с запущенным SELinux все процессы и файлы имеют специальные метки безопасности (так называемый «контекст безопасности»), используемые системой для принятия решений по доступу к этим процессам и файлам. После изменения доступа к конфигурационным файлам named требуется корректно восстановить их метки в SELinux. Для проверки состояния переключателей SELinux, относящихся к named, введём: getsebool -a | grep named. Теперь дадим named разрешение на запись в файлы DNS-зоны. В дополнительном терминале запустим в режиме реального времени расширенный лог системных сообщений, чтобы проверить корректность работы системы и в первом терминале перезапустим DNS-сервер ([рис. @fig-024] - [рис. @fig-025]).

![Исправление прав доступа к файлам в каталогах /etc/named и /var/named, корректное восстановление их меток в SELinux, проверка состояния переключателей SELinux и перезапуск DNS-сервера.](image/24.PNG){#fig-024 width=70%}

![Проверка корректности работы системы.](image/25.PNG){#fig-025 width=70%}

## Анализ работы DNS-сервера

При помощи утилиты dig получим описание DNS-зоны с сервера ns.mobihzova.net ([рис. @fig-026]).

![Получение описания DNS-зоны с сервера ns.mobihzova.net.](image/26.PNG){#fig-026 width=70%}

Команда dig ns.mobihzova.net выполнена успешно со статусом NOERROR. DNS-сервер 127.0.0.1#53 вернул корректный ответ: одна A-запись, связывающая имя ns.mobihzova.net с IP-адресом 192.168.1.1. Флаг aa (authoritative answer) указывает, что ответ авторитативен и получен непосредственно от сервера, ответственного за зону. Время выполнения запроса составляет 0 мсек, что свидетельствует о мгновенном ответе из кэша. TTL записи равен 86400 секундам (24 часа). Наличие EDNS COOKIE подтверждает использование современных расширений DNS. Результат демонстрирует корректную работу DNS-сервера и правильную настройку записи для ns-сервера в доменной зоне mobihzova.net.

При помощи утилиты host проанализируем корректность работы DNS-сервера ([рис. @fig-027]).

![Анализ корректности работы DNS-сервера.](image/27.PNG){#fig-027 width=70%}

Команда host -l mobihzova.net успешно выполняет трансфер зоны, показывая все записи: NS-запись (mobihzova.net), A-записи для mobihzova.net (192.168.1.1), ns.mobihzova.net (192.168.1.1) и server.mobihzova.net (192.168.1.1), что подтверждает полную передачу зоны.

Команда host -a mobihzova.net возвращает все записи типа ANY с статусом NOERROR: SOA-запись с серийным номером 2025090901 и параметрами обновления (refresh 86400, retry 3600, expire 604800, minimum 10800), NS-запись и A-запись с адресом 192.168.1.1, TTL 86400 секунд.

Команда host -t A mobihzova.net корректно возвращает IPv4-адрес 192.168.1.1 для домена mobihzova.net.

Команда host -t PTR 192.168.1.1 успешно выполняет обратный запрос, возвращая PTR-записи: ns.mobihzova.net и server.mobihzova.net, что подтверждает корректную настройку обратной зоны.

Вывод: DNS-сервер работает корректно. Все основные и обратные записи разрешаются правильно, трансфер зоны выполняется успешно, SOA-запись содержит актуальные параметры, что свидетельствует о правильной настройке прямой и обратной DNS-зон.

## Внесение изменений в настройки внутреннего окружения виртуальной машины

На виртуальной машине server перейдём в каталог для внесения изменений в настройки внутреннего окружения /vagrant/provision/server/, создадим в нём каталог dns, в который поместим в соответствующие каталоги конфигурационные файлы DNS ([рис. @fig-028]).

![Переход в каталог для внесения изменений в настройки внутреннего окружения /vagrant/provision/server/, создание в нём каталога dns, в который помещаем в соответствующие каталоги конфигурационные файлы DNS.](image/28.PNG){#fig-028 width=70%}

В каталоге /vagrant/provision/server создадим исполняемый файл dns.sh ([рис. @fig-029]).

![Создание в каталоге /vagrant/provision/server исполняемого файла dns.sh.](image/29.PNG){#fig-029 width=70%}

Откроем его на редактирование и пропишем в нём следующий скрипт (приведён в лабораторной работе). Этот скрипт, по сути, повторяет произведённые нами действия по установке и настройке DNS-сервера ([рис. @fig-030]).

![Открытие файла на редактирование и прописывание в нём скрипта.](image/30.PNG){#fig-030 width=70%}

Для отработки созданного скрипта во время загрузки виртуальной машины server в конфигурационном файле Vagrantfile добавим определённые параметры в разделе конфигурации для сервера ([рис. @fig-031]).

![Добавление параметров в конфигурационном файле Vagrantfile в разделе конфигурации для сервера.](image/31.PNG){#fig-031 width=70%}

# Выводы

В ходе выполнения лабораторной работы были приобретены практические навыки по установке и конфигурированию DNS-сервера, а также усвоили принципы работы системы доменных имён.

# Ответы на контрольные вопросы

1. Что такое DNS? - Это система, предназначенная для преобразования человекочитаемых доменных имен в IP-адреса, используемые компьютерами для идентификации друг друга в сети.

2. Каково назначение кэширующего DNS-сервера? - Его задача - хранить результаты предыдущих DNS-запросов в памяти. Когда клиент делает запрос, кэширующий DNS проверяет свой кэш, и если он содержит соответствующую информацию, сервер возвращает ее без необходимости обращаться к другим DNS-серверам. Это ускоряет процесс запроса.

3. Чем отличается прямая DNS-зона от обратной? - Прямая зона преобразует доменные имена в IP-адреса, обратная зона выполняет обратное: преобразует IP-адреса в доменные имена.

4. В каких каталогах и файлах располагаются настройки DNS-сервера? Кратко охарактеризуйте, за что они отвечают. - В Linux-системах обычно используется файл /etc/named.conf для общих настроек. Зоны хранятся в файлах в каталоге /var/named/, например, /var/named/example.com.zone.

5. Что указывается в файле resolv.conf? - Содержит информацию о DNS-серверах, используемых системой, а также о параметрах конфигурации.

6. Какие типы записи описания ресурсов есть в DNS и для чего они используются? - A(IPv4-адрес), AAAA(IPv6-адрес), CNAME (каноническое имя), MX (почтовый сервер), NS (имя сервера), PTR(обратная запись), SOA (начальная запись зоны), TXT (текстовая информация).

7. Для чего используется домен in-addr.arpa? - Используется для обратного маппинга IP-адресов в доменные имена.

8. Для чего нужен демон named? - Это DNS-сервер, реализация BIND (Berkeley Internet Name Domain).

9. В чём заключаются основные функции slave-сервера и master-сервера? - Master-сервер хранит оригинальные записи зоны, slave-серверы получают копии данных от master-сервера.

10. Какие параметры отвечают за время обновления зоны? - refresh, retry, expire, и minimum.

11. Как обеспечить защиту зоны от скачивания и просмотра? - Это может включать в себя использование TSIG (Transaction SIGnatures) для аутентификации между серверами.

12. Какая запись RR применяется при создании почтовых серверов? - MX (Mail Exchange).

13. Как протестировать работу сервера доменных имён? - Используйте команды nslookup, dig, или host.

14. Как запустить, перезапустить или остановить какую-либо службу в системе? - systemctl start|stop|restart <service>.

15. Как посмотреть отладочную информацию при запуске какого-либо сервиса или службы? - Используйте опции, такие как -d или -v при запуске службы.

16. Где храниться отладочная информация по работе системы и служб? Как её посмотреть? - В системных журналах, доступных через journalctl

17. Как посмотреть, какие файлы использует в своей работе тот или иной процесс? Приведите несколько примеров. - lsof -p <pid> или fuser -v <file>.

18. Приведите несколько примеров по изменению сетевого соединения при помощи командного интерфейса nmcli. - Примеры включают nmcli connection up|down <connection_name>.

19. Что такое SELinux? - Это мандатный контроль доступа для ядра Linux.

20. Что такое контекст (метка) SELinux? - Метка, определяющая, какие ресурсы могут быть доступны процессу или объекту.

21. Как восстановить контекст SELinux после внесения изменений в конфигурационные файлы? - restorecon -Rv <directory>.

22. Как создать разрешающие правила политики SELinux из файлов журналов, содержащих сообщения о запрете операций? - Используйте audit2allow.

23. Что такое булевый переключатель в SELinux? - Это параметр, который включает или отключает определенные аспекты защиты SELinux.

24. Как посмотреть список переключателей SELinux и их состояние? - getsebool -a.

25. Как изменить значение переключателя SELinux? - setsebool -P<boolean_name> <on|off>.
